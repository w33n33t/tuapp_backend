{
    "swagger": "2.0",
    "info": {
        "title": "Laravel Generator APIs",
        "version": "1.0.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/applications": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get a listing of the Applications.",
                "description": "Get all Applications",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Application"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Store a newly created Application in storage",
                "description": "Store Application",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Application that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Application"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Display the specified Application",
                "description": "Get Application",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Application",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Application"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Update the specified Application in storage",
                "description": "Update Application",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Application",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Application that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Application"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Application"
                ],
                "summary": "Remove the specified Application from storage",
                "description": "Delete Application",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Application",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/Auth/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "register a newly User",
                "description": "Store User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "email",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/Auth/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "login User",
                "description": "login User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "body",
                        "description": "User that should be login",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "User that should be login",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/role/addRole": {
            "post": {
                "tags": [
                    "Role & Permission"
                ],
                "summary": "Store a newly created Role in storage",
                "description": "Store Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nasffme",
                        "in": "body",
                        "description": "Role that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "config('roles.models.role')"
                        }
                    },
                    {
                        "name": "bddddddddody",
                        "in": "body",
                        "description": "Role that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "config('roles.models.role')"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "config('roles.models.role')"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/role/addPermission": {
            "post": {
                "tags": [
                    "Role & Permission"
                ],
                "summary": "Store a newly created Permission in storage",
                "description": "Store Permission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "body",
                        "description": "Permission that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "config('Permissions.models.Permission')"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "body",
                        "description": "Permission that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "config('Permissions.models.Permission')"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "config('Permissions.models.Permission')"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/role/addpermissiontorole": {
            "post": {
                "tags": [
                    "Role & Permission"
                ],
                "summary": "Add Permission to Role",
                "description": "Add Permission to Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "body",
                        "description": "Role Id",
                        "required": false,
                        "schema": {
                            "$ref": "config('roles.models.role')"
                        }
                    },
                    {
                        "name": "permissionId",
                        "in": "body",
                        "description": "Permission Id",
                        "required": false,
                        "schema": {
                            "$ref": "config('permissions.models.permission')"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "config('roles.models.role')"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/role/deletepermission": {
            "post": {
                "tags": [
                    "Role & Permission"
                ],
                "summary": "delete Permission from Role",
                "description": "Store Role",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "roleId",
                        "in": "body",
                        "description": "Role Id",
                        "required": false,
                        "schema": {
                            "$ref": "config('roles.models.role')"
                        }
                    },
                    {
                        "name": "permissionId",
                        "in": "body",
                        "description": "Permission Id",
                        "required": false,
                        "schema": {
                            "$ref": "config('permission.models.permission')"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all Permission should be deleted",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "config('roles.models.role')"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/role/deleteallpermission": {
            "post": {
                "tags": [
                    "Role & Permission"
                ],
                "summary": "delete all Permission",
                "description": "delete all Permission",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "body",
                        "description": "id role",
                        "required": false,
                        "schema": {
                            "$ref": "config('roles.models.role')"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all Permission should be deleted",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "config('roles.models.role')"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Get a listing of the Services.",
                "description": "Get all Services",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Service"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Service"
                ],
                "summary": "Store a newly created Service in storage",
                "description": "Store Service",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "body",
                        "description": "Service that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Service"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "Display the specified Service",
                "description": "Get Service",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Service",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Service"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Service"
                ],
                "summary": "Update the specified Service in storage",
                "description": "Update Service",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Service",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Service that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Service"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Service"
                ],
                "summary": "Remove the specified Service from storage",
                "description": "Delete Service",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Service",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Application": {
            "required": [
                "text"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "text": {
                    "description": "text",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Service": {
            "required": [
                "title"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "title": {
                    "description": "title",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Shop": {
            "required": [
                "title"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "title": {
                    "description": "title",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "User": {
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "first_name": {
                    "description": "first_name",
                    "type": "string"
                },
                "last_name": {
                    "description": "last_name",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}